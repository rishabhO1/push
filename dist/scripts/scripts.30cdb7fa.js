"use strict";angular.module("projectApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","mgcrea.ngStrap","ui.router","toaster"]).factory("Event",["$resource",function(a){return a("http://localhost:8080/api/events/:id",null,{update:{method:"PUT"}})}]).factory("MailingList",["$resource",function(a){return a("http://localhost:8080/api/mailingLists/:id",null,{update:{method:"PUT"}})}]).factory("storage",function(){return{}}).factory("userService",function(){var a={isLogged:!1},b=function(){a.isLogged=!1};return{user:a,reset:b}}).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",access:{allowAnonymous:!0}}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl",access:{allowAnonymous:!0}}).when("/signup",{templateUrl:"views/signup.html",controller:"SignUpCtrl",access:{allowAnonymous:!0}}).when("/dashboard",{templateUrl:"views/dashboard.html",controller:"DashboardCtrl",access:{allowAnonymous:!1}}).when("/event/edit",{templateUrl:"views/events/eventEdit.html",controller:"EventEditCtrl",access:{allowAnonymous:!1}}).when("/event",{templateUrl:"views/events/eventList.html",controller:"EventCtrl",access:{allowAnonymous:!1}}).when("/mailingLists",{templateUrl:"views/mailingList/mailingList.html",controller:"mailingListCtrl",access:{allowAnonymous:!1}}).when("/mailingLists/edit",{templateUrl:"views/mailingList/mailingListEdit.html",controller:"mailingListEditCtrl",access:{allowAnonymous:!1}}).when("/profile",{templateUrl:"views/profile.html",controller:"DashboardCtrl",access:{allowAnonymous:!1}}).otherwise({redirectTo:"/"})}]),angular.module("projectApp").controller("MainCtrl",["$scope","$location",function(a,b){a.isActive=function(a){return a===b.path()}}]),angular.module("projectApp").controller("EventCtrl",["$scope","$location","$http","$timeout","$filter","storage","Event","MailingList",function(a,b,c,d,e,f,g,h){g.query(function(b){a.events=b}),a.deleteEvent=function(d){c.post("http://localhost:8080/api/removefromml",{mailingListName:event.mailingListName,eventId:d}).then(function(){b.path("/event")}),g["delete"]({id:d}),a.events=e("filter")(a.events,{_id:"!"+d})},a.editEvent=function(a){"new"===a?f.newEvent=!0:(f.newEvent=!1,f.editedEvent=a),b.path("/event/edit")}}]).controller("EventEditCtrl",["$scope","$location","$http","$timeout","storage","Event","MailingList",function(a,b,c,d,e,f,g){a.editedEvent=e.editedEvent,g.query(function(b){a.mailingLists=b}),f.query(function(b){a.events=b}),a.save=function(d){f.query(function(b){a.events=b}),e.newEvent?f.save(d):f.update({id:d._id},d),c.post("http://localhost:8080/api/addtoml",{mailingListName:d.mailingListName,eventId:d._id}).then(function(){f.query(function(b){a.events=b}),b.path("/event")})},a.back=function(){b.path("/event")}}]),angular.module("projectApp").controller("mailingListCtrl",["$scope","$location","$timeout","$filter","storage","MailingList",function(a,b,c,d,e,f){f.query(function(b){a.mailingLists=b}),a.deletemailingList=function(b){f["delete"]({id:b}),a.mailingLists=d("filter")(a.mailingLists,{_id:"!"+b})},a.editmailingList=function(a){"new"===a?e.newMailingList=!0:(e.newMailingList=!1,e.editedMailingList=a),b.path("/mailingLists/edit")}}]).controller("mailingListEditCtrl",["$scope","$location","$timeout","storage","MailingList",function(a,b,c,d,e){a.editedMailingList=d.editedMailingList;var f=function(){e.query(function(b){a.mailingLists=b})};a.save=function(a){d.newMailingList?e.save(a):e.update({id:a._id},a),c(function(){f(),b.path("/mailingLists")},500)},a.back=function(){b.path("/mailingLists")}}]),angular.module("projectApp").factory("safeApply",[function(){return function(a,b){var c=a.$root.$$phase;"$apply"===c||"$digest"===c?b&&a.$eval(b):b?a.$apply(b):a.$apply()}}]).controller("LoginCtrl",["$scope","$rootScope","$location","$cookieStore","AuthService","AUTH_EVENTS","userService","Session","toaster","safeApply",function(a,b,c,d,e,f,g,h,i,j){a.credentials={username:"",password:""},a.login=function(h){e.login(h).then(function(e){b.$broadcast(f.loginSuccess),a.setCurrentUser(e),g.user.isLogged=!0,d.put("loggedin",!0),j(a),c.path("/profile"),i.pop("success","Success!","You have successfully logged in!"),i.pop("default","Welcome!")},function(){b.$broadcast(f.loginFailed),d.put("loggedin",null),i.pop("error","Failure!","Login Failed!")})},a.logout=function(e){b.$broadcast(f.logoutSuccess),a.setCurrentUser(null),c.path("/"),g.user.isLogged=!1,h.destroy(),d.put("loggedin",null),d.put("sessionId",null),i.pop("success","Success!","You have logged out!"),i.pop("default","Seeya!")}}]).constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).constant("USER_ROLES",{all:"*",admin:"admin",editor:"editor",guest:"guest"}).factory("AuthService",["$http","$cookieStore","Session",function(a,b,c){var d={};return d.login=function(d){return a.post("http://localhost:8080/api/login",d).then(function(a){return c.create(a.data.id,a.data.user.id,a.data.user.email,a.data.user.role),b.put("sessionId",a.data.id),a.data.user})},d.isAuthenticated=function(){return!!c.userId},d.isAuthorized=function(a){return angular.isArray(a)||(a=[a]),d.isAuthenticated()&&-1!==a.indexOf(c.userRole)},d}]).service("Session",function(){this.create=function(a,b,c){this.id=a,this.userId=b,this.userRole=c},this.destroy=function(){this.id=null,this.userId=null,this.userRole=null}}).controller("ApplicationController",["$scope","$rootScope","$location","$cookieStore","$cookies","USER_ROLES","AuthService","userService","toaster","Session",function(a,b,c,d,e,f,g,h,i,j){a.isActive=function(a){return a===c.path()},a.currentUser=null,a.userRoles=f,a.isAuthorized=g.isAuthorized,a.currentUser=j.userId,a.user=h.user,a.$on("$routeChangeStart",function(a,b,d){void 0===b.access||b.access.allowAnonymous||h.user.isLogged||c.path("/login")}),b.$on("$locationChangeStart",function(a,b,d){for(var e in window.routes)-1!==b.indexOf(e)&&(window.routes[e].access.allowAnonymous||h.user.isLogged||(i.pop("error","You are not logged in!",""),c.path("/login")))}),a.setCurrentUser=function(b){a.currentUser=b},a.loggedIn=d.get("loggedin"),a.loggedIn===!0?a.loggedOut=null:(a.loggedOut=!0,a.loggedIn=null)}]).config(["$stateProvider","USER_ROLES",function(a,b){a.state("dashboard",{url:"/dashboard",templateUrl:"views/dashboard.html",data:{authorizedRoles:[b.admin,b.editor]}})}]).run(["$rootScope","AUTH_EVENTS","AuthService",function(a,b,c){a.$on("$stateChangeStart",function(d,e){var f=e.data.authorizedRoles;c.isAuthorized(f)||(d.preventDefault(),c.isAuthenticated()?a.$broadcast(b.notAuthorized):a.$broadcast(b.notAuthenticated))})}]).provider("myCSRF",function(){var a="X-CSRFToken",b="csrftoken",c=["GET"];this.setHeaderName=function(b){a=b},this.setCookieName=function(a){b=a},this.setAllowedMethods=function(a){c=a},this.$get=["$cookies",function(d){return{request:function(e){return-1===c.indexOf(e.method)&&(e.headers[a]=d[b]),e}}}]}).config(["$httpProvider",function(a){a.interceptors.push("myCSRF")}]).run(["$http","$cookies",function(a,b){a.defaults.headers.post["X-CSRFToken"]=b.csrftoken}]),angular.module("projectApp").controller("SignUpCtrl",["$scope","$rootScope","$location","$cookieStore","RegService","REG_EVENTS","userService","toaster",function(a,b,c,d,e,f,g,h){a.credentials={username:"",password:"",contact:"",email:""},a.register=function(i){e.register(i).then(function(e){b.$broadcast(f.registerSuccess),a.setCurrentUser(null),c.path("/home"),g.user.isLogged=!1,d.put("loggedin",null),h.pop("success","Success!","You have successfully registered!")},function(){b.$broadcast(f.registerFailed),d.put("loggedin",null),h.pop("error","Failure!","Error in registering! Try Again with different credentials")})}}]).constant("REG_EVENTS",{registerSuccess:"reg-register-success",registerFailed:"reg-register-failed",notAuthorized:"reg-not-authorized"}).constant("USER_ROLES",{all:"*",admin:"admin",editor:"editor",guest:"guest"}).factory("RegService",["$http","Session",function(a,b){var c={};return c.register=function(c){return a.post("http://localhost:8080/api/signup",c).then(function(a){return b.create(a.data.id,a.data.user.id,a.data.user.role),a.data.user})},c.isAuthenticated=function(){return!!b.userId},c.isAuthorized=function(a){return angular.isArray(a)||(a=[a]),c.isAuthenticated()&&-1!==a.indexOf(b.userRole)},c}]).service("Session",function(){this.create=function(a,b,c){this.id=a,this.userId=b,this.userRole=c},this.destroy=function(){this.id=null,this.userId=null,this.userRole=null}}),angular.module("projectApp").controller("DashboardCtrl",["$scope","$location","MailingList","$http",function(a,b,c,d){c.query(function(b){a.mailingLists=b}),a.containsObject=function(a,b){var c;for(c=0;c<b.length;c++)if(angular.equals(b[c],a))return!0;return!1},a.subscribe=function(b){d.post("http://localhost:8080/api/subscribe",{username:a.currentUser.id,email:a.currentUser.email,mailingListId:b._id}).then(function(c){"Success"===c.data.message&&a.currentUser.mailingLists.push(b._id)})},a.unsubscribe=function(b){d.post("http://localhost:8080/api/unsubscribe",{username:a.currentUser.id,email:a.currentUser.email,mailingListId:b._id}).then(function(c){"Success"===c.data.message&&a.currentUser.mailingLists.splice(a.currentUser.mailingLists.indexOf(b._id),1)})}}]);